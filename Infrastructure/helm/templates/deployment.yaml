apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "order-service.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "order-service.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "order-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "order-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
{{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
{{- end }}
{{- if or .Values.serviceAccount.create .Values.serviceAccount.name }}
      serviceAccountName: {{ include "order-service.serviceAccountName" . }}
{{- end }}
      securityContext:
{{- toYaml .Values.podSecurityContext | indent 8 }}
      containers:
        - name: order-service
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
{{- toYaml .Values.securityContext | indent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
{{- if or .Values.env .Values.envFromSecrets .Values.envFromConfigMaps }}
          env:
{{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
{{- end }}
{{- if .Values.envFromConfigMaps }}
{{- range .Values.envFromConfigMaps }}
            - name: {{ .name }}
              valueFrom:
                configMapKeyRef:
                  name: {{ .configMap }}
                  key: {{ .key }}
{{- end }}
{{- end }}
{{- end }}
{{- if or .Values.envFromSecrets .Values.envFromConfigMaps .Values.envFromConfigMapsRef }}
          envFrom:
{{- range .Values.envFromSecrets }}
            - secretRef:
                name: {{ . }}
{{- end }}
{{- if .Values.envFromConfigMapsRef }}
{{- range .Values.envFromConfigMapsRef }}
            - configMapRef:
                name: {{ . }}
{{- end }}
{{- end }}
{{- end }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.volumeMounts }}
          volumeMounts:
{{ toYaml .Values.volumeMounts | indent 12 }}
{{- end }}
{{- if .Values.lifecycle }}
          lifecycle:
{{ toYaml .Values.lifecycle | indent 12 }}
{{- end }}
      {{- if .Values.volumes }}
      volumes:
{{ toYaml .Values.volumes | indent 8 }}
      {{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
